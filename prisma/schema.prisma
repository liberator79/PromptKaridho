
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Shops {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String
  productsType String
  avatar String
  rating Float @default(0)
  totalSales Int @default(0)
  allProducts Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @unique
}

model Image {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  public_id String
  url String
  Prompts Prompts? @relation(fields : [promptId], references: [id])
  promptId String? @db.ObjectId
}

model Reviews {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  promptId String @db.ObjectId
  userId String
  rating Float
  comment String
  createdAt DateTime @default(now())
  prompts Prompts @relation(fields : [promptId], references: [id]) 
}

model PromptFiles {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  public_id String
  url String
  promptId String? @db.ObjectId
  Prompts Prompts? @relation(fields: [promptId], references: [id])
}

enum PromptStatus {
  Pending
  Live
  Declined
}

model Orders {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  promptId String @db.ObjectId
  prompt Prompts @relation(fields: [promptId], references: [id])
  promptName String
  paymentMethod String
  paymentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Prompts{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  shortDescription String
  description String
  images Image[]
  estimatedPrice Float?
  price Float
  category String
  tags String
  ratings Float @default(0)
  reviews Reviews[]
  promptUrl PromptFiles[]
  sellerId String
  orders Orders[]
  status PromptStatus @default(Pending)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}